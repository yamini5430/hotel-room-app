{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yaminisukhija/roomjs-app/components/UI/CheckBox/CheckBox.js\";\nimport React, { Component, PropTypes } from 'react';\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isChecked: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleCheckboxChange\", function () {\n      var _this$props = _this.props,\n          checkChangeHandler = _this$props.checkChangeHandler,\n          type = _this$props.type;\n\n      _this.setState(function (_ref) {\n        var isChecked = _ref.isChecked;\n        return {\n          isChecked: !isChecked\n        };\n      });\n\n      checkChangeHandler(type);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      var isChecked = this.state.isChecked;\n      return React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: label,\n        checked: isChecked,\n        onChange: this.toggleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), label));\n    }\n  }]);\n\n  return Checkbox;\n}(Component); // Checkbox.propTypes = {\n//   label: PropTypes.string.isRequired,\n//   handleCheckboxChange: PropTypes.func.isRequired,\n// };\n\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/yaminisukhija/roomjs-app/components/UI/CheckBox/CheckBox.js"],"names":["React","Component","PropTypes","Checkbox","isChecked","props","checkChangeHandler","type","setState","label","state","toggleCheckboxChange"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;IAEMC,Q;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,SAAS,EAAE;AADL,K;;2EAIe,YAAM;AAAA,wBACU,MAAKC,KADf;AAAA,UACnBC,kBADmB,eACnBA,kBADmB;AAAA,UACCC,IADD,eACCA,IADD;;AAG3B,YAAKC,QAAL,CAAc;AAAA,YAAGJ,SAAH,QAAGA,SAAH;AAAA,eACZ;AACEA,UAAAA,SAAS,EAAE,CAACA;AADd,SADY;AAAA,OAAd;;AAMAE,MAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACD,K;;;;;;;6BAEQ;AAAA,UACCE,KADD,GACW,KAAKJ,KADhB,CACCI,KADD;AAAA,UAECL,SAFD,GAEe,KAAKM,KAFpB,CAECN,SAFD;AAIP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACkB,QAAA,IAAI,EAAC,UADvB;AAEkB,QAAA,KAAK,EAAEK,KAFzB;AAGkB,QAAA,OAAO,EAAEL,SAH3B;AAIkB,QAAA,QAAQ,EAAE,KAAKO,oBAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQGF,KARH,CADF,CADF;AAcD;;;;EAnCoBR,S,GAsCvB;AACA;AACA;AACA;;;AAEA,eAAeE,QAAf","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nclass Checkbox extends Component {\n  state = {\n    isChecked: false,\n  }\n\n  toggleCheckboxChange = () => {\n    const { checkChangeHandler, type } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    checkChangeHandler(type);\n  }\n\n  render() {\n    const { label } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className=\"checkbox\">\n        <label>\n          <input\n                            type=\"checkbox\"\n                            value={label}\n                            checked={isChecked}\n                            onChange={this.toggleCheckboxChange}\n                        />\n\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n\n// Checkbox.propTypes = {\n//   label: PropTypes.string.isRequired,\n//   handleCheckboxChange: PropTypes.func.isRequired,\n// };\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}